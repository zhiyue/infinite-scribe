name: Python CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'apps/backend/**'
      - 'packages/**'
      - 'pyproject.toml'
      - 'uv.lock'
      - '.github/workflows/python-ci.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'apps/backend/**'
      - 'packages/**'
      - 'pyproject.toml'
      - 'uv.lock'
      - '.github/workflows/python-ci.yml'
  workflow_dispatch:

permissions:
  contents: read
  actions: read

jobs:
  lint:
    name: Lint Python Code
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Run Ruff
      uses: astral-sh/ruff-action@v3
      with:
        src: "./apps/backend"
        args: "check --output-format=github"
    
    - name: Run Ruff format check
      uses: astral-sh/ruff-action@v3
      with:
        src: "./apps/backend"
        args: "format --check"
    
    - name: Install uv
      uses: astral-sh/setup-uv@v5
      with:
        python-version: "3.11"
        enable-cache: true
    
    - name: Install dependencies
      run: |
        uv sync --group dev
    
    - name: Type check with mypy
      run: |
        uv run mypy apps/backend/src/ --ignore-missing-imports
    
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: lint
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v5
      with:
        python-version: "3.11"
        enable-cache: true
    
    - name: Install dependencies
      run: |
        uv sync --group dev
    
    - name: Run unit tests
      env:
        USE_EXTERNAL_SERVICES: false
      run: |
        cd apps/backend
        uv run python -m pytest tests/unit/ -v --cov=src --cov-report=term-missing
    
    - name: Run integration tests
      env:
        USE_EXTERNAL_SERVICES: false
      run: |
        cd apps/backend
        # All tests will use testcontainers, no need to skip remote database tests
        uv run python -m pytest tests/integration/ -v --cov=src --cov-report=term-missing
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: backend
        name: backend-coverage
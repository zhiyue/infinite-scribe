name: Auto Generate README

on:
  push:
    paths:
      - '**/*.py'
      - '**/*.ts'
      - '**/*.tsx'
      - '**/*.js'
      - '**/*.jsx'
      - '!**/test/**'
      - '!**/tests/**'
      - '!**/__tests__/**'
      - '!**/spec/**'
      - '!**/*.test.*'
      - '!**/*.spec.*'
  pull_request:
    paths:
      - '**/*.py'
      - '**/*.ts'
      - '**/*.tsx'
      - '**/*.js'
      - '**/*.jsx'
      - '!**/test/**'
      - '!**/tests/**'
      - '!**/__tests__/**'
      - '!**/spec/**'
      - '!**/*.test.*'
      - '!**/*.spec.*'

jobs:
  auto-readme:
    runs-on: ubuntu-latest
    permissions:
      contents: write # 直接提交 README 文件到当前分支
      actions: read # Claude action 需要读取 CI 信息
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Auto Generate README
        uses: anthropics/claude-code-base-action@beta
        with:
          prompt: |
            REPO: ${{ github.repository }}
            BRANCH: ${{ github.ref_name }}

            你是一个专业的技术文档生成助手。请执行以下任务：

            ## 📋 任务目标
            **严格要求**：仅为最近一次提交（HEAD）中有代码变更的子目录自动生成高质量的中文 README.md 文件

            ## 🔍 分析步骤
            1. **严格限定变更范围**
               - **必须使用 `git diff HEAD~1 HEAD --name-only` 获取最近一次提交的变更文件**
               - **仅分析这些变更文件**
               - 从变更文件列表中识别包含代码文件的子目录（.py, .ts, .tsx, .js, .jsx 等）
               - **排除测试目录**：跳过 test/、tests/、__tests__/、spec/ 等测试文件夹
               - 过滤掉配置文件、文档等非核心代码目录

            2. **限定目录结构分析**
               - **仅读取变更涉及的子目录的文件结构**
               - **禁止分析未在最近提交中变更的目录**
               - 识别关键配置文件（package.json, requirements.txt 等）
               - 仅分析变更的代码文件，推断模块功能和架构

            3. **README 内容生成**
               - **仅为有变更的子目录生成/更新 README**
               - 项目/模块简介和核心功能
               - 目录结构说明
               - **可视化图表**：使用 mermaid 生成相关图表提升理解
               - 安装和使用方法
               - API 文档（如果是服务/库）
               - 开发指南和贡献说明

            ## 📝 内容要求
            - **语言**: 使用中文编写
            - **风格**: 简洁实用，重点突出
            - **结构**: 清晰的层次和格式
            - **可视化图表**（使用 mermaid 语法）:
              * **流程图**: 核心业务流程、数据处理流程
              * **时序图**: API 调用序列、组件交互时序
              * **类图**: 数据模型关系、组件继承结构
              * **架构图**: 模块依赖关系、系统架构概览
              * **状态图**: 业务状态转换、组件生命周期
            - **针对性**:
              * 前端目录：组件关系图、页面路由图、状态流转图
              * 后端目录：API 时序图、数据流程图、服务架构图
              * 工具目录：使用流程图、配置关系图

            ## 🔄 更新策略
            - **仅更新有代码变更的目录的 README.md**
            - 如果目录已有 README.md，智能更新而不是完全覆盖
            - 保留用户自定义的重要内容
            - 增强和补充缺失的标准信息

            ## ⚠️ 严格限制
            - **禁止分析或修改未在最近提交中变更的目录**
            - **禁止生成或更新未变更目录的 README 文件**
            - **必须严格按照 git diff 结果确定工作范围**

            ## 📦 项目上下文
            **InfiniteScribe** - AI 驱动的小说写作平台
            - 后端：Python 3.11 + FastAPI + SQLAlchemy
            - 前端：React 18 + TypeScript + Vite
            - 架构：微服务 + 事件驱动

            ## 🎨 Mermaid 图表指南
            - **语法规范**: 使用标准 mermaid 语法，确保 GitHub 可正常渲染
            - **图表选择**: 根据代码复杂度和业务逻辑选择合适的图表类型
            - **节点命名**: 使用中文描述，简洁明了
            - **颜色主题**: 可使用 mermaid 主题增强视觉效果
            - **图表大小**: 控制复杂度，避免过于复杂的图表
            - **实用性**: 重点突出关键流程和核心架构，避免绘制琐碎细节

            **示例格式**:
            ```mermaid
            graph TD
                A[用户请求] --> B{验证权限}
                B -->|通过| C[处理业务逻辑]
                B -->|失败| D[返回错误]
                C --> E[返回结果]
            ```

            ## ✅ 完成操作
            使用以下步骤提交生成的 README 文件：
            1. `git add` 添加生成/修改的 README 文件
            2. `git commit` 提交，消息格式：`docs: auto-generate README files for changed directories [最近提交哈希前7位]`
            3. `gh push` 推送到当前分支

          anthropic_api_key: ${{ secrets.GLM_API_KEY }}
          allowed_tools: 'Bash(git:*),View,GlobTool,GrepTool,BatchTool,Write,Edit,MultiEdit,Bash(gh push:*),Bash(gh:*)'
          model: ${{ vars.GLM_MODEL }}
          claude_env: |
            ANTHROPIC_BASE_URL: ${{ vars.GLM_BASE_URL }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GIT_USER_NAME: github-actions[bot]
          GIT_USER_EMAIL: 41898282+github-actions[bot]@users.noreply.github.com

"""Check models after Base import fix

Revision ID: 36ba569035ab
Revises: cdbb7c721fea
Create Date: 2025-07-09 22:47:47.102375

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '36ba569035ab'
down_revision: Union[str, Sequence[str], None] = 'cdbb7c721fea'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('chapter_versions_chapter_id_version_number_key'), 'chapter_versions', type_='unique')
    op.create_unique_constraint(op.f('uq_chapter_versions_chapter_id'), 'chapter_versions', ['chapter_id', 'version_number'])
    op.drop_constraint(op.f('chapters_novel_id_chapter_number_key'), 'chapters', type_='unique')
    op.create_unique_constraint(op.f('uq_chapters_novel_id'), 'chapters', ['novel_id', 'chapter_number'])
    op.drop_constraint(op.f('command_inbox_idempotency_key_key'), 'command_inbox', type_='unique')
    op.create_unique_constraint(op.f('uq_command_inbox_idempotency_key'), 'command_inbox', ['idempotency_key'])
    op.drop_constraint(op.f('domain_events_event_id_key'), 'domain_events', type_='unique')
    op.create_unique_constraint(op.f('uq_domain_events_event_id'), 'domain_events', ['event_id'])
    op.drop_constraint(op.f('worldview_entries_novel_id_name_entry_type_key'), 'worldview_entries', type_='unique')
    op.create_unique_constraint(op.f('uq_worldview_entries_novel_id'), 'worldview_entries', ['novel_id', 'name', 'entry_type'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('uq_worldview_entries_novel_id'), 'worldview_entries', type_='unique')
    op.create_unique_constraint(op.f('worldview_entries_novel_id_name_entry_type_key'), 'worldview_entries', ['novel_id', 'name', 'entry_type'], postgresql_nulls_not_distinct=False)
    op.drop_constraint(op.f('uq_domain_events_event_id'), 'domain_events', type_='unique')
    op.create_unique_constraint(op.f('domain_events_event_id_key'), 'domain_events', ['event_id'], postgresql_nulls_not_distinct=False)
    op.drop_constraint(op.f('uq_command_inbox_idempotency_key'), 'command_inbox', type_='unique')
    op.create_unique_constraint(op.f('command_inbox_idempotency_key_key'), 'command_inbox', ['idempotency_key'], postgresql_nulls_not_distinct=False)
    op.drop_constraint(op.f('uq_chapters_novel_id'), 'chapters', type_='unique')
    op.create_unique_constraint(op.f('chapters_novel_id_chapter_number_key'), 'chapters', ['novel_id', 'chapter_number'], postgresql_nulls_not_distinct=False)
    op.drop_constraint(op.f('uq_chapter_versions_chapter_id'), 'chapter_versions', type_='unique')
    op.create_unique_constraint(op.f('chapter_versions_chapter_id_version_number_key'), 'chapter_versions', ['chapter_id', 'version_number'], postgresql_nulls_not_distinct=False)
    # ### end Alembic commands ###

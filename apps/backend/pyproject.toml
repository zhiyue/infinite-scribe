[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "genesis-backend"
version = "0.1.0"
description = "Genesis AI content creation backend"
authors = [{name = "Genesis Team", email = "team@genesis.ai"}]
readme = "README.md"
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]

dependencies = [
    # Web framework
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    
    # Database
    "sqlalchemy[asyncio]>=2.0.0",
    "asyncpg>=0.29.0",
    "alembic>=1.12.0",
    
    # Authentication & Security
    "PyJWT>=2.8.0",
    "cryptography>=41.0.0",
    "passlib[bcrypt]>=1.7.4",
    
    # HTTP & Networking
    "httpx>=0.25.0",
    "aiofiles>=23.2.0",
    
    # Message Queue
    "aiokafka>=0.9.0",
    
    # Data validation & serialization
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    
    # Utilities
    "python-multipart>=0.0.6",
    "python-dotenv>=1.0.0",
    
    # Logging & Monitoring
    "structlog>=23.2.0",
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "httpx>=0.25.0",  # For testing HTTP clients
    
    # Test containers
    "testcontainers[postgresql]>=3.7.0",
    "testcontainers[kafka]>=3.7.0",
    
    # Code quality
    "black>=23.11.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "mypy>=1.7.0",
    "bandit>=1.7.5",
    
    # Development tools
    "pre-commit>=3.5.0",
    "ipython>=8.17.0",
    "jupyter>=1.0.0",
]

prod = [
    # Production monitoring
    "prometheus-client>=0.19.0",
    "opentelemetry-api>=1.21.0",
    "opentelemetry-sdk>=1.21.0",
    "opentelemetry-instrumentation-fastapi>=0.42b0",
    "opentelemetry-instrumentation-sqlalchemy>=0.42b0",
    
    # Production server
    "gunicorn>=21.2.0",
]

[project.urls]
Homepage = "https://github.com/genesis-ai/backend"
Documentation = "https://docs.genesis.ai"
Repository = "https://github.com/genesis-ai/backend"
Issues = "https://github.com/genesis-ai/backend/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["src*"]
exclude = ["tests*"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml",
    "--cov-fail-under=80",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "unit: marks tests as unit tests",
    "integration: marks tests as integration tests",
    "slow: marks tests as slow running",
    "kafka: marks tests that require Kafka",
    "postgres: marks tests that require PostgreSQL",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
    "*/alembic/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.black]
line-length = 100
target-version = ["py39", "py310", "py311"]
include = '\.pyi?$'
extend-exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | migrations
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_glob = ["*/migrations/*"]

[tool.mypy]
python_version = "3.9"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_equality = true
exclude = [
    "migrations/",
    "alembic/",
    "tests/",
]

[[tool.mypy.overrides]]
module = [
    "aiokafka.*",
    "testcontainers.*",
    "asyncpg.*",
]
ignore_missing_imports = true

[tool.bandit]
exclude_dirs = ["tests", "migrations"]
skips = ["B101"]  # Skip assert_used test